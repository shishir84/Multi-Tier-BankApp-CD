pipeline {
    agent any
    
    parameters {
        string(name: 'DOCKER_TAG', defaultValue: 'latest')
    }
    tools {
        maven "maven3"
    }
    
    environment  {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: 'git-cred', url: 'https://github.com/shishir84/Multi-Tier-BankApp-CI.git'
            }
        }
        
         stage('Compile') {
            steps {
                sh "mvn compile"
            }
        }
        
         stage('Test') {
            steps {
                sh "mvn test -DskipTests=true"
            }
        }
        
         stage('File System Scan') {
            steps {
                sh 'trivy fs --format table -o fs.html .'
            }
        }
        
         stage('Sonar Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=bankApp -Dsonar.projectKey=bankapp -Dsonar.java.binaries=target '''
                }
            }
        }
        
         stage('Build And Publish') {
            steps {
                withMaven(globalMavenSettingsConfig: 'maven-config', jdk: '', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
                    sh "mvn deploy -DskipTests=true"
                }
            }
        }
        
         stage('Docker build and tag') {
            steps {
                withDockerRegistry(credentialsId: 'docker-cred', url: '') {
                   sh "docker build -t docshishir/bankapp:${params.DOCKER_TAG} ."
                }
            }
        }
        
        stage('Docker Image Scan') {
    steps {
        script {
            def imageTag = params.DOCKER_TAG
            sh "trivy image --format table -o image.html docshishir/bankapp:${imageTag}"
        }
    }
}
        
          stage('Docker Push') {
            steps {
                withDockerRegistry(credentialsId: 'docker-cred', url: '') {
                   sh "docker push docshishir/bankapp:${params.DOCKER_TAG}"
                }
            }
        }
        
         stage('CleanWorkSpace') {
            steps {
                cleanWs()
            }
        }
        
         stage('Update YAML file in CD repo') {
            steps {
                withCredentials([gitUsernamePassword(credentialsId: 'git-cred', gitToolName: 'Default')]) {
                    sh '''
                      git clone https://github.com/shishir84/Multi-Tier-BankApp-CD.git 
                        cd Multi-Tier-BankApp-CD
                    
                        repo_dir=$(pwd)
                    
                        echo "Working directory: $repo_dir"
                        ls -l bankapp/
                    
                        sed -i "s|image: docshishir/bankapp:.*|image: docshishir/bankapp:${DOCKER_TAG}|" "$repo_dir/bankapp/bankapp-ds.yml"
                        
                    '''
                    
                    sh '''
                     echo Updated yaml file
                     cat Multi-Tier-BankApp-CD/bankapp/bankapp-ds.yml
                    '''
                    
                    sh '''
                        cd Multi-Tier-BankApp-CD
                        git config user.email "admin@admin.com"
                        git config user.name "admin"
                    '''
                    
                    sh '''
                        cd Multi-Tier-BankApp-CD
                        ls
                        git add bankapp/bankapp-ds.yml
                        git commit -m "Updated the image tag to ${DOCKER_TAG}"
                        git push origin main
                    '''
                    
                }
            }
        }
        
         }
}
